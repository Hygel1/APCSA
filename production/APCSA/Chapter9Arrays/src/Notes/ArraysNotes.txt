- Inserting a value into a sorted array
    - find the place to insert, move other values to the right, insert the value into its proper place
Two Dimensional Arrays
- used to represent things like tables, martices, gameboards, images, etc.
- Addressed using a pair of indiced representing row/column
    - board[row][column]='x';
- each row acts as its own array
    - **an Array of Arrays**
- declared using two sets of brackets
    - char[][] letterGrid = newChar[5][7];
    - double[][] sample = {{2.2, 3.3, 4.4}, {5.5,6.6,7.7}};
- rows are stored in a separate block of consecutive memory (their own block)
- Arrays are generally rectangular but can be jagged (columns have different lengths)
- if m is a 2D Array, m[k] is the 1D Array at row k
    - m.length is the number of rows, m[k].length is the length of the Array on row k
- 2D Arrays can be easily traversed using nested loops
- martices
    - when adding matrices, the dimensions must be the same
    - When multiplying matrices, the first matrix's # of cols but me equal to the second matrix's # of rows
        - The resulting matrix's dimensions is equal to the other two dimensions
        - (2x2)*(2*12) is valid and results in a (2x12), (3x2)*(3x2) is invalid
        - multiplication is done by multiplying each row's values to their corresponding values in the second matrix's column then adding the products together
- for each loop is called via for(dataType name: arrayName){}
    - creates a copy of each element in the array and allows you to see each one in order
    - cannot change the element that you're looking at but if the element is an object, its methods can be called to modify parts of the element