- prove why recursion isn't always the best option
Towers of Hanoi
    TOH(n)=(2^n)-1
    Base case
        TOH(1)=(2^1)-1=1 move
    Assume TOH(n-1) works
        Demonstrate that TOH(n-1) implies TOH(n)
        TOH(N)=TOH(n-1)+1+TOH(n-1)=(2^n-1)-1+1+(2^n-1)-1=2(2^n-1)-1=(2^n)-1

Fibonacci
    FIB(N) executes not less than 1+((3/2)^n-2) calls to itself
    Base case
        FIB(1)=((3/2)^1-2)=((3/2)^-1)=2/3 works
        FIB(2)=((3/2)^2-2)=((3/2)^0)=1 works
    Assume that it works for FiB(n-1) and FIB(n-2)
        Demonstrate that these imply FIB(n)
        FIB(n)=FIB(n-1)+FIB(n-2)+1=((3/2)^(n-1)-2)+((3/2)^(n-2)-2)+1 //this just adds one to the number of calls, therefore the +1 can be removed to prove the same claim because subtracting will not add to the final result
        ((3/2)^n-3)+((3/2)^n-4)=((3/2)^n-4)*(((3/2)^1)+1)=((3/2)^n-4)*((3/2)+(2/2))=((3/2)^n-4)*(10/4) //10/4 can be changed to 9/4 to make it more convenient while only changing the equation negatively (because the wording said "less than", subtracting can be done without changing the original claim, the original claim said nothing about being equal)
        ((3/2)^n-4)*(9/4)=((3/2)^n-4)*((3/2)^2)=((3/2)^n-2) //this is the same as the original claim, therefore proven